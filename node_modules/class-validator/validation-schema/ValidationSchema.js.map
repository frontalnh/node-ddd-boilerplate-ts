{"version":3,"sources":["../../src/validation-schema/ValidationSchema.ts"],"names":[],"mappings":"","file":"ValidationSchema.js","sourcesContent":["/**\r\n * Validation schema is a decorator-free way of validation of your objects.\r\n * Also using validation schemas makes this library to be easily used with es6/es5.\r\n */\r\nexport interface ValidationSchema {\r\n\r\n    /**\r\n     * Schema name. This is required, because we tell validator to validate by this schema using its name.\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * Validated properties.\r\n     */\r\n    properties: {\r\n\r\n        /**\r\n         * Name of the object's property to be validated which holds an array of validation constraints.\r\n         */\r\n        [propertyName: string]: {\r\n\r\n            /**\r\n             * Validation type. Should be one of the ValidationTypes value.\r\n             */\r\n            type: string;\r\n\r\n            /**\r\n             * Constraints set by validation type.\r\n             */\r\n            constraints?: any[];\r\n\r\n            /**\r\n             * Error message used to be used on validation fail.\r\n             * You can use \"$value\" to use value that was failed by validation.\r\n             * You can use \"$constraint1\" and \"$constraint2\" keys in the message string,\r\n             * and they will be replaced with constraint values if they exist.\r\n             * Message can be either string, either a function that returns a string.\r\n             * Second option allows to use values and custom messages depend of them.\r\n             */\r\n            message?: string|((value?: any, constraint1?: any, constraint2?: any) => string);\r\n\r\n            /**\r\n             * Specifies if validated value is an array and each of its item must be validated.\r\n             */\r\n            each?: boolean;\r\n\r\n            /**\r\n             * Indicates if validation must be performed always, no matter of validation groups used.\r\n             */\r\n            always?: boolean;\r\n\r\n            /**\r\n             * Validation groups used for this validation.\r\n             */\r\n            groups?: string[];\r\n\r\n            /**\r\n             * Specific validation type options.\r\n             */\r\n            options?: any;\r\n        }[];\r\n    };\r\n}\r\n"],"sourceRoot":".."}