{"version":3,"file":"debug.js","sourceRoot":"","sources":["../../../src/integrations/pluggable/debug.ts"],"names":[],"mappings":";;;AAAA,mCAAqE;AASrE,YAAY;AACZ;IAcE;;OAEG;IACH,eAAmB,OAAsB;QAhBzC;;WAEG;QACI,SAAI,GAAW,KAAK,CAAC,EAAE,CAAC;QAc7B,IAAI,CAAC,OAAO,sBACV,QAAQ,EAAE,KAAK,EACf,SAAS,EAAE,KAAK,IACb,OAAO,CACX,CAAC;IACJ,CAAC;IAED;;OAEG;IACI,yBAAS,GAAhB;QAAA,iBAwBC;QAvBC,6BAAuB,CAAC,UAAO,KAAkB,EAAE,IAAsB;;;gBACjE,IAAI,GAAG,mBAAa,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;gBACnD,IAAI,IAAI,EAAE;oBACR,4BAA4B;oBAC5B,6BAA6B;oBAC7B,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;wBACzB,QAAQ,CAAC;qBACV;oBAED,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;wBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;wBAC5C,IAAI,IAAI,EAAE;4BACR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;yBAC5C;qBACF;yBAAM;wBACL,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;wBACnB,IAAI,IAAI,EAAE;4BACR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;yBACnB;qBACF;iBACF;gBACD,sBAAO,KAAK,EAAC;;aACd,CAAC,CAAC;IACL,CAAC;IA9CD;;OAEG;IACW,QAAE,GAAW,OAAO,CAAC;IA4CrC,YAAC;CAAA,AArDD,IAqDC;AArDY,sBAAK","sourcesContent":["import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { Integration, SentryEvent, SentryEventHint } from '@sentry/types';\n\n/** JSDoc */\ninterface DebugOptions {\n  stringify?: boolean;\n  debugger?: boolean;\n}\n\n/** JSDoc */\nexport class Debug implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = Debug.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Debug';\n\n  /** JSDoc */\n  private readonly options: DebugOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: DebugOptions) {\n    this.options = {\n      debugger: false,\n      stringify: false,\n      ...options,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor(async (event: SentryEvent, hint?: SentryEventHint) => {\n      const self = getCurrentHub().getIntegration(Debug);\n      if (self) {\n        // tslint:disable:no-console\n        // tslint:disable:no-debugger\n        if (self.options.debugger) {\n          debugger;\n        }\n\n        if (self.options.stringify) {\n          console.log(JSON.stringify(event, null, 2));\n          if (hint) {\n            console.log(JSON.stringify(hint, null, 2));\n          }\n        } else {\n          console.log(event);\n          if (hint) {\n            console.log(hint);\n          }\n        }\n      }\n      return event;\n    });\n  }\n}\n"]}