{"version":3,"sources":["../../src/decorator/ValidationOptions.ts"],"names":[],"mappings":"","file":"ValidationOptions.js","sourcesContent":["/**\r\n * Options used to pass to validation decorators.\r\n */\r\nexport interface ValidationOptions {\r\n\r\n    /**\r\n     * Specifies if validated value is an array and each of its item must be validated.\r\n     */\r\n    each?: boolean;\r\n\r\n    /**\r\n     * Error message used to be used on validation fail.\r\n     * You can use \"$value\" to use value that was failed by validation.\r\n     * You can use \"$constraint1\" and \"$constraint2\" keys in the message string,\r\n     * and they will be replaced with constraint values if they exist.\r\n     * Message can be either string, either a function that returns a string.\r\n     * Second option allows to use values and custom messages depend of them.\r\n     */\r\n    message?: string|((value?: any, constraint1?: any, constraint2?: any) => string);\r\n\r\n    /**\r\n     * Validation groups used for this validation.\r\n     */\r\n    groups?: string[];\r\n\r\n    /**\r\n     * Indicates if validation must be performed always, no matter of validation groups used.\r\n     */\r\n    always?: boolean;\r\n\r\n    /*\r\n     * A transient set of data passed through to the validation result for response mapping\r\n     */\r\n    context?: any;\r\n}"],"sourceRoot":".."}