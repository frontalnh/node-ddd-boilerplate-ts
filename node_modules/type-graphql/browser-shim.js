"use strict";
/*
This "shim" can be used on the frontend to prevent from errors on undefined decorators,
when you are sharing same classes across backend and frontend.
To use this shim, simply configure your Webpack configuration to use this file
instead of normal TypeGraphQL module.

plugins: [
    ..., // any existing plugins that you already have
    new webpack.NormalModuleReplacementPlugin(/type-graphql$/, function (result) {
        result.request = result.request.replace(/type-graphql/, "type-graphql/browser-shim");
    }),
]
*/
Object.defineProperty(exports, "__esModule", { value: true });
const dummyFn = () => void 0;
exports.Arg = dummyFn;
exports.Args = dummyFn;
exports.ArgsType = dummyFn;
exports.Authorized = dummyFn;
exports.Ctx = dummyFn;
exports.registerEnumType = dummyFn;
exports.Field = dummyFn;
exports.FieldResolver = dummyFn;
exports.Info = dummyFn;
exports.InputType = dummyFn;
exports.InterfaceType = dummyFn;
exports.Mutation = dummyFn;
exports.ObjectType = dummyFn;
exports.PubSub = dummyFn;
exports.Query = dummyFn;
exports.Resolver = dummyFn;
exports.Root = dummyFn;
exports.Subscription = dummyFn;
exports.createUnionType = dummyFn;
exports.UseMiddleware = dummyFn;
